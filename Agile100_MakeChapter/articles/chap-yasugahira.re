= スキルマップでチームのアジリティを高めよう！

//flushright{
安ヶ平 雄太（yasugahira0810）
//}

== はじめに


メンバのスキルを星取表の形で可視化するスキルマップ。チーム発足時のメンバのスキルの可視化、離任によるリスクの可視化、学習モチベーションの向上などを目的に作成、運用しているチームは多いのではないでしょうか？


スキルマップの運用について悩んでいた際、実はスキルマップを活用することで、チームのアジリティ@<fn>{agility}を可視化したうえで、チームのアジリティ向上に繋げることができるのでは？という仮説が浮かんだので、この章で説明します。


スキルマップ自体の説明は、ryuzeeさんのブログエントリ、スキルマップ作成のすすめ@<fn>{skilmapsusume}をご覧ください。

//footnote[agility][この記事において「チームのアジリティ」とは、メンバが何かを提案してから、チームとして合意して具体的なアクションに繋げるまでの期間を指しています。この定義は私の勝手なイメージで出典はないので、一般的なイメージと異なっていたらすみません。。。なおチームのアジリティという考え方は、広木さんの『2つのDXとDX Criteria 2021』https://dxd2021.cto-a.org/program/time-table/b-6 という講演を拝見して思いついた考え方です。]

//footnote[skilmapsusume][スキルマップ作成のすすめ https://www.ryuzee.com/contents/blog/7065]

== 私なりのスキルマップの作り方


私はスクラムチーム発足時に、チームビルディングの一環として、インセプションデッキなどと共にスキルマップを作成します。チームによっては、DEVのスキルを可視化するために、DEV内でスキルマップを作成していると思います。ただ私はチームビルディングの一環としてPOと一緒にスキルマップを作成したいので、POっぽいスキルやSMっぽいスキルも含めてスキルマップを作成します。そうすると私のチームのスキルマップは、下図のように、DEVっぽいスキル、SMっぽいスキル、POっぽいスキルにゾーンが分かれたスキルマップになります。


//image[skilmap][チーム発足時のスキルマップ例]

=== スキルマップの運用で難しいところ


私はスキルマップを作成した後、ふりかえりなどを活用して定期的にチームで話し合ってスキルマップを更新するのですが、このときファシリテーションが難しいと思う瞬間があります。それはSMっぽいスキル、POっぽいスキルの更新です。


DEVっぽいスキルの更新は、以下の理由で盛り上がります。

 * 開発を進めることでプロダクトの理解が深まった結果、必要なスキルの解像度が上がり、スキルの項目が細分化される（例えば図の「AWS」という項目は早い段階でチームが採用しているサービス毎に細分化される）
 * メンバのスキル度合いがぐんぐん向上していく
 * メンバが自己評価したスキル度合いに対して、他メンバからのフィードバックが入る



//image[dev_update][DEVっぽいスキルの更新]


それに対して、SMっぽいスキルやPOっぽいスキルの更新は以下の理由で後回しにしてしまいがちです。

 * DEVっぽいスキルの更新で時間が盛り上がって時間がなくなる
 * DEVがPO/SMっぽいスキルを普段意識していないので、話題に上がりにくい
 * PO/SMはスクラムチームの中だとマイノリティなので、PO/SM自身からは話題に上げづらい



//image[posm_update][PO/SMっぽいスキルの更新]


このようにPO/SMっぽいスキルの更新が後回しにしてしまった結果、POがだんだんスキルマップ更新の場に参加しなくなり、スクラムチームで共通理解を作る場が失われます。


チームビルディングのためにあえてスキルマップにPO/SMっぽいスキルを追加した私としては、これを残念に思いながらも、「そもそも役割の違うPO/SM/DEVのスキルを1つのスキルマップに表現することに無理があったのか？」と悩みました。そんな時に、前述の『2つのDXとDX Criteria 2021』を拝見して、「チームのアジリティ」という観点で、各ロールのスキルを1つのスキルマップに意味はあると考え直せたので、次は「チームのアジリティ」について述べます。

== チームのアジリティ


スキルマップから話が飛びますが、私はチームのアジリティは、メンバがお互いのロールについてどれだけ共通認識を持っているかによって決まると考えています。


POがDEVに市場の状況や新機能の価値を説明しても、DEVが「言われたことしかやりません」という態度だと、プロダクトをより良くするための会話は生まれません。


逆も然りで、DEVがPOに技術的負債を解消する提案をしても、POが「技術のことはわかりません」という態度だと、必要性の説明に時間がかかったり、場合によっては必要性が理解されず技術的負債が溜まり続けることになります。


チーム発足時に上記の状態だったとすると、それはチームのアジリティが低い状態です。


その後チームで会話を重ねてお互いのロールについて理解が深まると、徐々に共通理解が育まれ、PO、DEV間の会話は効率的かつ生産的なものになってゆき、チームのアジリティは向上します。

== スキルマップでチームのアジリティを高める


さてここまで、異なるロールのスキルを1つのスキルマップに表現する是非と、そこに意味を見出すための鍵となるチームのアジリティという考え方について述べてきました。ここではもう少し具体的に、スキルマップとチームのアジリティの関係について論じ、スキルマップでチームのアジリティを上げる方法について述べます。


まずスキルマップとチームのアジリティの関係ですが、スキルマップにおいてメンバそれぞれのロール以外のロールのスキル（下図の矢印で示した範囲）の埋まり具合が、チームのアジリティを示します。


//image[roll][他のロールのスキルを有したスキルマップ例]


一つ留意点として、自身のロールを埋める基準とそれ以外のロールを埋めるときの基準は、統一できません。
例えばDEVがDEVっぽいスキルを埋めるときは「できる」が基準となりますが、POがDEVっぽいスキルを「できる」を基準に埋めることは現実的には厳しいです。
ただ、だからといってスキルマップを埋めることをやめてしまうと、ロール間での会話は生まれず共通理解は育まれません。そこで私はスキル度合いの評価軸に「できる」だけでなく「わかる」も明記することで、自身のロール以外のロールのスキル度合いも埋めやすくしています。


//image[level][スキル度合いの凡例][scale=0.7]


このようにスキル度合いを設定することで、異なるロールのスキルに対する興味・関心が生まれるので、あとは定期的にスキルマップを更新する場を設けてロール間でスキル度合いについて会話することで、共通理解を育むことができます。
そしてそれぞれのロールに対して理解が足りないところが見つかれば、勉強会や共同作業でお互いの理解を深め合うことができ、結果としてチームのアジリティを向上させることができます。

== さいごに


この記事では、スクラムにおいて異なるロールのスキルを1つのスキルマップにして運用することが難しいことに言及した上で、それでもスキルマップの運用の仕方を工夫することで、チームのアジリティを可視化し、改善していけると述べました。


　

//embed{
    \begin{minipage}{.1\linewidth}
        \centering
        \includegraphics[width=.75\linewidth]{images/chap-yasugahira/yasugahira.jpg}
    \end{minipage}
    \begin{minipage}{.89\linewidth}
        安ヶ平 雄太（yasugahira0810）\\
        https://linktr.ee/yasugahira0810\\
        \end{minipage}
    \hspace{1ex}
//}

千葉から都内に通っているスクラムマスターです。「一緒にキュンキュンしよっ♪」
