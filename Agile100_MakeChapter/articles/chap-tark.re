= アジャイルな人を育む環境とは？

//flushright{
ターク@tark_ann
//}


皆さん初めまして、タークと申します。
2021/12/11 Developers Boost2021 で登壇させていただいた、教育について何の知識もない私がOJT(On the Job Traininng)をすることになった経験@<fn>{ojt}について書いてみました。

//footnote[ojt][@<href>{https://speakerdeck.com/tark_ann/is-scrum-the-secret-to-growth-how-to-make-ojt-to-learn-enjoy-developers-boost-2021, https://speakerdeck.com/tark_ann/is-scrum-the-secret-to-growth-how-to-make-ojt-to-learn-enjoy-developers-boost-2021}]

== OJT前の状況


当時の私は自分の成長に精いっぱいで、誰かを育てることに全く興味がありませんでした。
OJTの打診が来た時も、面倒なことを頼まれたとモチベーションはかなり低かった記憶があります。
また、コロナ禍でオンラインでの働き方を模索していた時期で、今までの教育ノウハウも活用できず絶望感があったことを覚えています。


一方で、新人はプログラミング未経験で入社し、研修でJavaの基本構文の読み書きは出来るようになったものの、簡単なアプリ開発の経験もありませんでした。
OJT開始後に判明したことですが、学生時代の経験から勉強へ苦手意識があり、エンジニアとしての生活にも不安だったようです。

== OJTの柱となった2つの問い


何もかもわからず絶望していた私は、自分の中にヒントがないか模索することから始めました。
様々な問いを立て自問自答していく中で、OJTの取り組みにつながるヒントを得られた2つの問いを紹介します。

=== 新人にどうなってほしいのか


最初は、会社やチームが求めるアジャイルな人になってもらうという漠然とした考えしかありませんでした。
なぜアジャイルなのか考える中で、アジャイルの理解が深まったことで仕事が楽しくなった経験を思い出したと同時に新たな問いが生まれました。
「開発の楽しさを知らない人がアジャイルの良さに気づけるのか？」という問いです。


私は学生時代からプログラミングの楽しさは知っていたので、開発プロセスにも興味が持ちアジャイルを学ぼうと思いましたが、新人にはそもそも楽しいモノづくりの経験がありません。
つまり、モノづくりの楽しさを知っていたからこそ、アジャイルの良さに気づけたのではないかという仮説が生まれました。
その仮説に基づいて、アプリを1から作ってモノづくりの楽しさを体験する、その中でアジャイルの価値観を知ってもらうことが目標になりました。

=== 私はどうやってエンジニアとして成長したのか


私がエンジニアとして成長したのは、アプリのリファクタリング経験が大きく影響していました。
私がジョインしたチームは、あちこちにレガシーなコードがあり改善したいと思っていましたが、顧客を説得してまでリファクタリングする覚悟はありませんでした。


とあることをきっかけにリファクタリングする流れになりましたが、一番若手だった私は先輩がリードしてくれるだろうと本音では他人事でした。
しかし、設計の書籍を手渡され、簡単な設計を考えてほしいと言われたのがきっかけで、私にも強い当事者意識が生まれました。
書籍を読んでも意味がわからず、Webの解説記事を読み漁り必死に設計を勉強した経験が、エンジニアとしての私を支えています。


この経験から、改善したいという思い、リファクタリングする空気になった心理的安全性、きっかけの3つの要素が成長を生み、当事者意識が成長の質を高めるという構図が見えてきました。
ここから、取り組んだことが成功体験になっていると、次の挑戦につながるモチベーションが生まれるのではないかという仮説が出てきました。
この仮説から、たくさんの成功体験を実感できるような仕組みがエンジニアとしての成長を支える重要な土台になるというヒントを得ました。

== OJTの取り組み


今回のOJTは、アプリ開発に必要な基礎スキルの学習期間とアプリ開発期間の二段構成で実施しました。
一般にOJTは実際の業務の中で学んでいくことを指しますが、今回は実際の業務ではなく仮想テーマのアプリ開発を実施することにしました。

モノづくりの楽しさを第一に考えたとき、すでに形になっている業務の経験が楽しさにつながるが不透明だったことや業務に必要な知識に圧倒されて楽しむ余裕がなくなる可能性があったためです。
そのため、新人の趣味と関連付けた仮想テーマを用意して、高いモチベーションを維持したままアプリ開発できることを優先しました。
今回は、このOJTで特に重要だと感じた3つの取り組みについて紹介します。

=== 認知的徒弟制


新人はアプリ開発・スクラム・Gitなど何もかも初めてで、安心してもらえる工夫がないとOJTが失敗するのは想像できました。
最近よく耳にする心理的安全性がカギを握っていると思いましたが、教育にどう活かせばいいか全然わかりませんでした。
そのため、この時期から社外の勉強会に参加するようになり、その中で参考になったのがXP祭り2020の「コードレビュー地獄から抜け出すためのペアプロ育成法~学習化学の視点から~」@<fn>{pair-programming}という発表でした。
この発表で、教育心理学というキーワードを知り、認知的徒弟制という取り組み方法を学びました。


認知的徒弟制を取り入れることで、OJTの導入教育で特に効果があったと感じています。
IDEの使い方からHellow Worldを出力するまでの最初の第一歩やGitを使ってプルリクエストを作成するまでの一連の流れについてペアプロで実施しました。
何ができていたらレビューしてもらえるのか、手を動かしながら理解することができるので、新たな技術を学ぶことへの安心感につながったと思います。

//footnote[pair-programming][@<href>{https://speakerdeck.com/kawagoi/kodorebiyudi-yu-kara-ba-kechu-sutamefalsepeapuroyu-cheng-fa-xue-xi-ke-xue-falseshi-dian-kara-number-xpjug, https://speakerdeck.com/kawagoi/kodorebiyudi-yu-kara-ba-kechu-sutamefalsepeapuroyu-cheng-fa-xue-xi-ke-xue-falseshi-dian-kara-number-xpjug}]

=== 分報


分報という言葉に馴染みがない方へ簡単に説明すると、より早く状況をチームへ共有するために社内Twitterのような感覚でチャットに書き込む仕組みです。

私のチームではSlackの個人チャンネルに分報を書くようにしていて、誰か困っている様子があったら助けに行く文化があり、心理的安全性が高い状態が作られていました。
オンラインでは相手の状況を知るための工夫が必要になりますが、分報をするだけでオンサイトに近い状態で業務ができる経験が役に立ちました。
また、OJTで活用した状況を分析すると、他にも様々な効果があることが見えてきました。

 * お互いの状況が可視化され、新人によくある「いつ質問していいかわからない」という問題を軽減できる
 * 新人とコーチャーの関係に固定されず、他のチームメンバーとの交流機会が生まれやすい
 * 先輩がどのような思考で業務しているか可視化されているので、新人が簡単に真似することができる


=== ふりかえり


OJTはスクラムでやっていたので、イテレーションごとにふりかえりがありました。
このふりかえりの場で、自身の成長(=成功体験)を実感してもらうことがアジャイルな精神を養う重要な取り組みでした。


新人だった頃の私は成長して当たり前という感覚があり、自己肯定感が低いままOJTを終えたため、アジャイルのプラクティスを実践できても精神面では全然アジャイルではありませんでした。
その反省を活かし新人に自信を持ってもらう場にするために、とにかく褒めることを意識していました。


もう1つ意識していたことは、できなかったことについて原因分析するよりもどう改善できるかを考える場であることを丁寧に説明し、心理的安全性が高い状態を作り出すことです。
ふりかえりに不慣れな方によくある事例として、できなかったというネガティブな感情で頭がいっぱいになってしまう、問題の原因分析をする中で自分が責められる気持ちになってしまう問題があります。
ふりかえりに慣れるまでの間、新人がネガティブな感情に支配されないようにリードすることが私の重要な役割でした。

== OJTの結果


一番大きな変化は、勉強に苦手意識があった新人が勉強を楽しいと思えるようになったことです。
1から自分の手でアプリを作るのはとても楽しく、そのための勉強は苦痛じゃなかったと新人から伝えられたときは、とても達成感がありました。
イテレーティブな開発により少しずつ動くものが出来ていく楽しさにも触れていて、アジャイルの良さを感じ取ってもらえるOJTにできたと思います。


また、OJTのカギを握っていた心理的安全性も、気にかけてもらえるのが伝わり嬉しかったとフィードバックがあり、狙い通りの取り組みができたことに安心しました。
私にとって予想外だったのは、心理的安全性が高い環境がよかったという感想にとどまらず、そういう安心感を与えられる人になりたいと新人の目標につながったことでした。

== まとめ


この記事では、心理的安全性を土台としスクラムを活用したOJTにより、新人に大きな内面の変化が生まれたことについて説明しました。

世の中の動きを考慮しても今後リモート主体の会社が増えることが予想され、心理的安全性の重要性はより一層高まると思います。
新人教育では様々な要求があり、どれを優先するか悩むことが多い中、心理的安全性を重視した教育効果が見えてきた経験でした。
心理的安全性が土台にあるエンジニアがこの先どのように成長するのか、今後の新人の活躍に期待しています。


また、元々教育に興味がなかった私も、今では会社全体のOJT環境を改善しようと奮闘しています。
私に起きた変化について別の記事@<fn>{qiita}にまとめてありますので、興味のある方はご覧ください。


最後になりますが、このような記事の執筆に関わらせていただく機会を頂けたことに深く感謝いたします。

//footnote[qiita][@<href>{https://qiita.com/tark_ann/items/c41ef11a90ba1959e803, https://qiita.com/tark_ann/items/c41ef11a90ba1959e803}]

　

//embed{
    \begin{minipage}{.1\linewidth}
        \centering
        \includegraphics[width=.75\linewidth]{images/chap-tark/tark_icon.jpg}
    \end{minipage}
    \begin{minipage}{.89\linewidth}
        ターク@tark\_ann https://twitter.com/tark\_ann\\
        \end{minipage}
    \hspace{1ex}
//}

製造業でアジャイルネイティブなiOSエンジニアとして活動しています。
旅行が趣味で、47都道府県制覇を目指して活動中。現在32/47踏破。
