= 独習アジャイル

//flushright{
渡部 啓太 @sobarecord
//}

== 独りで学ぶ

そう、独りで学ぶのが好きなんです。受験の時もそうでした。塾講師に質問をした記憶がありません。大学でプログラミングを身につけるのに役にたった本。もちろん、『独習C』と『独習Java』です。

社内でアジャイルに関する研修の講師をしていると、こんな声をよく聞きます。「アジャイルで開発をやってみたいんです。だけど、今いるプロジェクトでは既存の開発手法から変わらなさそうなんですよね…」。そうした、もどかしさや機会のなさに嘆いている方は多いのではないでしょうか？

残念。では、独りで学びましょう。独りで、「スクラム」をするのです。

あたりまえですが、独りだと、チームで取り組めません。なので、正確には「スクラム」とは言えません。しかし、独りでできる範囲であれば、経験を積めます。スクラムに関する本を読んだとき、あるいはカンファレンスで他社事例を聞いたときにその効果はあらわれます。自身の経験をふまえた理解、解釈ができるようになるのです。受験勉強でも自分で問題を解いてから答え合わせをし、解説を読みましたよね？独りでスクラムをしても、アジャイルに関する経験値はあがるのです。

講師だけでなく、ぼくは日々、アジャイル開発チームの立ち上げの支援や、スクラムマスターとしての仕事もしています。成長していくチームメンバーを見ていて感じるのは、「アジャイルは体験してみないと、真の理解ができない」ということです。アジャイルソフトウェア開発の定義である「アジャイルソフトウェア開発宣言」には具体的なやり方は示されていません。自らでうまいやり方を見つけていく必要があるのです。

独習アジャイルをしましょう。

== 独習アジャイルの進め方

ここから具体的な進め方の例を紹介します。スクラムに関する用語は知っているものとしているため、わからない単語があればスクラムガイドを見てください。「スクラムガイド」とネット検索すれば、最初にでてきます。

スクラムをするといっても、独りなのでそこまで構える必要はありません。誰かの承認も、報告義務もありません。内容も簡単です。もしかすると、すでに仕事のやり方として身についているかもしれません。ただ、そこに「スクラムをやっているんだ」という意識をのせていきましょう。

=== 準備をする

まずは準備です。自分が持っているタスクをひたすら洗い出しましょう。これは仕事のことのみでもよいですが、プライベートなタスクも含めると、より効果を実感できると思います。注意点は1つ。全てのタスクを1日以下の大きさにしましょう。それ以上の大きなタスクだと、日々の状況を検査することができませんからね。

洗い出す先は紙のノートでもいいですし、TrelloやMiro、NotionといったWebサービスを駆使してもいいです。あるいはパソコン上のテキストやExcelもOK。自分の使いやすいツールをつかいましょう。

タスクを洗い出せたら、それらを優先順位で並び替えましょう。期日や重要度、価値、リスクを基準として順番を入れ替えていくとよいでしょう。このリストが、プロダクトバックログです。

プロダクトバックログができたら、次はスプリントの期間を決めましょう。特別な事情がない限り、1週間を一区切りとしたスプリントを回していくのがわかりやすいです。たとえば、月曜始まり日曜終わりのような、くり返しやすく設定しましょう。

=== スプリントを回す

さて、準備が整ったのなら、いよいよ独りスクラムの始まりです。次の1週間でやることをプロダクトバックログから取り出しましょう。もちろん、優先順位の高いタスクからです。この際に1週間でギリギリおさまるくらいの量を見極めようとする気持ちが重要です。結果として過不足があったとしても、ギリギリの量を見積もることを繰り返すうちに、自分が1週間で消化できる限界値が分かってきます。これがスプリントプランニングです。

スプリントプランニングで週の計画を立てることができました。つぎは、タスクをこなしていきましょう。そして毎日、決まった時間に、立てた計画通りに進んでいるかチェックをします。昨日は何をやったか、今日は何をやるか、何かリスクや問題はないか。順調に進んでいるのなら問題ないですが、予定とズレてしまうこともあります。特に、遅れている場合はリカバリープランを考えます。タスク内容によってはチーム内で相談したり、誰かの助けが必要な事もあるでしょう。このように、日々状況を確認し、必要なら計画を立て直していきます。これがデイリースクラムです。

そして、1週間のおわりに、成果物を他の人に見てもらいます。できればチームメンバーやマネージャからコメントをもらいましょう。得られたフィードバックから新たなプロダクトバックログアイテムを追加したり、方針の再検討をします。人に見てもらうのが難しい場合は、自己評価でも問題ないです。その場合は、できるだけ客観的に確認するようにしましょう。これがスプリントレビューです。

さいごに、1週間のふりかえりをします。うまくいったことと、いかなかったこと。それはなぜなのか。次の1週間をより良くするためのアクションはなにか。KPT（良かったこと、困ったこと、次に試すこと）やYWT（やったこと、わかったこと、次にやること）といったふりかえりのフレームワークを使うのも手です。決めたアクションアイテムは、必要ならばプロダクトバックログ追加しましょう。タスクではなく、ルールや心構えであれば、壁やモニターに貼りだしておきましょう。これがスプリントレトロスペクティブです。

=== くり返し、進化・深化させる

ふりかえりが終われば、新しい1週間のはじまりです。再びスプリントプランニングから始めていきましょう。スプリントを回していると、タスクの増減や優先順位の変化は日々起こるはずです。プロダクトバックログは常にアップデートし、意味のあるリストにしましょう。

ここまでの基本の流れに加え、自分がやりたいと思っている、アジャイルに関するプラクティスを入れていくのももちろんOKです。もし、テスト駆動開発がやりたいのであれば、ローカルの開発環境だけで動くようなテストやCI環境を用意すれば誰にも文句は言われません。

何スプリントかこなすと、リズム良く仕事をする大切さがわかってきます。毎日、毎週計画を立てる。ふりかえりをする。学習のループが回る。まさしく、スクラムの三本柱「透明性」「検査」「適応」ですね。

== つまり、タスク管理なんです

ここは、持論です。つまりは、タスク管理なのではと思うのです。個人なのかチームなのか、向かう先がプロダクトなのか自分なのか。それが違うだけです。

タスク管理の本には、アジャイルに関する話だと思えるような内容が出てきます。

//quote{
豊かではあるものの、変化の激しい現代において、ゆとりをもって無理なく結果を出していくには、今までの考え方や仕事のやり方では歯が立たない。今までとはまったく違う、新しい手法やテクニック、新しい習慣が求められているのだ
（書籍『ストレスフリーの整理術』より）
//}

//quote{
「1つのことに集中し、それが完了してから次に進む」これが成功の王道
（書籍『仕事に追われない仕事術 マニャーナの法則』より）
//}

//quote{
小さな失敗を重ねることで、何がうまくいくか、うまくいかないかを知ることができます
（書籍『「やること地獄」を終わらせるタスク管理「超」入門』より）
//}

もっと簡潔にいうと、仕事をうまくやりましょうということ。独習アジャイルを進めていけば、わかるはずです。

== もうひとつの重要なポイント

あらためて、独習アジャイルのメリットとデメリットをおさらいします。

 * メリット
   ** 独りでもできる
   ** アジャイルの解像度が上がる
 * デメリット
   ** コミュニケーションがないのでその部分はあまり学べない

さいごに、もうひとつ重要なポイントを紹介します。それは「アジャイルの良い点を他人に説明できるようになる」です。

じつは、ぼくがチームに初めてのスクラムを導入できたきっかけは、この独りで行うスクラムだったのです。独習アジャイルを通じ、アジャイルのメリットを理解しました。そして、「アジャイルをやりたいという熱量」にプラスして、「スクラムで生産性があがった、働きやすくなった」という話をマネージャーに説きました。その場で「やってみよう」という返事をもらえました。

チームのスクラムマスターとして自分の学びをチームに注入。スクラムマスターとしての一歩を踏み出しました。さらに、そのスクラムチーム立ち上げの経験をもとに、全社にアジャイルを推進する組織を立ち上げることもできました。さらにさらに、今ではアジャイルコーチとして様々な社内外のチームを支援しています。「アジャイルをしたいけどできない」とくすぶっていた時とはえらい違いです。

　

だから、独りで学ぶのが好きなんです。あなたにも好きになってほしいなあ。

　

//embed{
    \begin{minipage}{.1\linewidth}
        \centering
        \includegraphics[width=.75\linewidth]{images/chap-watanabe/watanabe_icon.jpeg}
    \end{minipage}
    \begin{minipage}{.89\linewidth}
        渡部啓太 @sobarecord https://twitter.com/sobarecord\\
        チーム作り支援士／意思決定コーチ
        \end{minipage}
    \hspace{1ex}
//}

チーム作りの専門家、アジャイルコーチ。
チーム作りを通じ、誰もが楽しく働ける社会を目指す。
ソフトウェア開発者としてキャリアをスタート。仕事をしている中でチーム作りの大切さに目覚め、スクラムの導入や全社アジャイル推進活動を経験し、現在はNRI bit Labs に所属。アジャイル導入支援・コーチを行っている。
チームの立ち上げや、軌道修正が得意。
